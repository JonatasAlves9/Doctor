name: CI Pipeline

on:
  push:
    branches:
      - main # Ajuste o branch conforme sua necessidade
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout do código
    - name: Check out code
      uses: actions/checkout@v3

    # Instalação do .NET SDK
    - name: Set up .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.x.x' # Ajuste conforme necessário

    # Restauração das dependências
    - name: Install dependencies
      run: dotnet restore

    # Executa o SonarCloud Scanner para começar a análise
    - name: SonarCloud Scan Begin
      run: dotnet sonarscanner begin /k:"projeto-chave" /o:"organização-no-sonarcloud" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.opencover.reportPaths="TestResults/**/*.xml"

    # Executa os testes e gera o relatório de cobertura
    - name: Run tests with coverage
      run: dotnet test --settings coverlet.runsettings --collect:"XPlat Code Coverage" --results-directory ./TestResults

    # Compila o projeto
    - name: Build project
      run: dotnet build --no-restore

    # Finaliza a análise do SonarCloud
    - name: SonarCloud Scan End
      run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

    # Publica os resultados de cobertura
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage
        path: TestResults/
