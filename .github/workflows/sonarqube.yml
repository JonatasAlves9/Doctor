name: SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      # Faz o checkout do código
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

      # Instalação do .NET SDK
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x.x'

      # Restaurar dependências
      - name: Restore dependencies
        run: dotnet restore

      # Executar análise do SonarCloud
      - name: SonarCloud Scan Begin
        run: dotnet sonarscanner begin /k:"projeto-chave" /o:"organização-sonarcloud" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.opencover.reportPaths="TestResults/coverage.opencover.xml"

      # Executar testes e coletar cobertura
      - name: Run tests with coverage
        run: dotnet test --collect:"XPlat Code Coverage" --settings coverlet.runsettings --results-directory ./TestResults

      # Compilar o projeto
      - name: Build project
        run: dotnet build --no-restore

      # Finalizar análise do SonarCloud
      - name: SonarCloud Scan End
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      # Publicar o relatório de cobertura
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: ./TestResults/
